"""Initial migration

Revision ID: 569b767289fa
Revises: 
Create Date: 2025-09-04 03:58:37.971878

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '569b767289fa'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('logistics_trucks',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('capacity', sa.Integer(), nullable=False),
    sa.Column('current_location', sa.JSON(), nullable=False),
    sa.Column('status', sa.Enum('OPEN', 'CLOSED', 'PARTIAL', 'UNKNOWN', name='statusenum'), nullable=False),
    sa.Column('assigned_route', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_logistics_trucks_id'), 'logistics_trucks', ['id'], unique=False)
    op.create_table('relief_centers',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('capacity', sa.Integer(), nullable=False),
    sa.Column('available_capacity', sa.Integer(), nullable=False),
    sa.Column('contact_info', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_relief_centers_id'), 'relief_centers', ['id'], unique=False)
    op.create_table('road_nodes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('osm_id', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_road_nodes_id'), 'road_nodes', ['id'], unique=False)
    op.create_table('situation_reports',
    sa.Column('report_id', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('affected_area', sa.String(), nullable=False),
    sa.Column('summary', sa.Text(), nullable=False),
    sa.Column('impacted_roads', sa.Integer(), nullable=False),
    sa.Column('active_closures', sa.Integer(), nullable=False),
    sa.Column('weather_situation', sa.Text(), nullable=False),
    sa.Column('key_recommendations', sa.JSON(), nullable=False),
    sa.Column('severity_level', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('report_id')
    )
    op.create_index(op.f('ix_situation_reports_report_id'), 'situation_reports', ['report_id'], unique=False)
    op.create_table('weather_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('temperature', sa.Float(), nullable=False),
    sa.Column('temperature_feels_like', sa.Float(), nullable=False),
    sa.Column('humidity', sa.Integer(), nullable=False),
    sa.Column('pressure', sa.Integer(), nullable=False),
    sa.Column('visibility', sa.Float(), nullable=True),
    sa.Column('wind_speed', sa.Float(), nullable=False),
    sa.Column('wind_direction', sa.Integer(), nullable=False),
    sa.Column('weather_condition', sa.JSON(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_weather_data_id'), 'weather_data', ['id'], unique=False)
    op.create_table('optimization_routes',
    sa.Column('route_id', sa.String(), nullable=False),
    sa.Column('truck_id', sa.String(), nullable=False),
    sa.Column('nodes', sa.JSON(), nullable=False),
    sa.Column('total_distance', sa.Float(), nullable=False),
    sa.Column('estimated_duration', sa.Float(), nullable=False),
    sa.Column('stops', sa.JSON(), nullable=False),
    sa.Column('risk_score', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['truck_id'], ['logistics_trucks.id'], ),
    sa.PrimaryKeyConstraint('route_id')
    )
    op.create_index(op.f('ix_optimization_routes_route_id'), 'optimization_routes', ['route_id'], unique=False)
    op.create_table('road_edges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('source_node', sa.Integer(), nullable=False),
    sa.Column('target_node', sa.Integer(), nullable=False),
    sa.Column('length', sa.Float(), nullable=False),
    sa.Column('max_speed', sa.Integer(), nullable=True),
    sa.Column('road_type', sa.String(), nullable=True),
    sa.Column('geometry', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['source_node'], ['road_nodes.id'], ),
    sa.ForeignKeyConstraint(['target_node'], ['road_nodes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_road_edges_id'), 'road_edges', ['id'], unique=False)
    op.create_table('forecast_predictions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('road_id', sa.Integer(), nullable=False),
    sa.Column('delay_probability', sa.Float(), nullable=False),
    sa.Column('estimated_delay', sa.Float(), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=False),
    sa.Column('weather_factor', sa.Float(), nullable=False),
    sa.Column('traffic_factor', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['road_id'], ['road_edges.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_forecast_predictions_id'), 'forecast_predictions', ['id'], unique=False)
    op.create_table('road_closures',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('road_id', sa.Integer(), nullable=False),
    sa.Column('closure_type', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('severity', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('estimated_end_time', sa.DateTime(), nullable=True),
    sa.Column('coordinates', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['road_id'], ['road_edges.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_road_closures_id'), 'road_closures', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_road_closures_id'), table_name='road_closures')
    op.drop_table('road_closures')
    op.drop_index(op.f('ix_forecast_predictions_id'), table_name='forecast_predictions')
    op.drop_table('forecast_predictions')
    op.drop_index(op.f('ix_road_edges_id'), table_name='road_edges')
    op.drop_table('road_edges')
    op.drop_index(op.f('ix_optimization_routes_route_id'), table_name='optimization_routes')
    op.drop_table('optimization_routes')
    op.drop_index(op.f('ix_weather_data_id'), table_name='weather_data')
    op.drop_table('weather_data')
    op.drop_index(op.f('ix_situation_reports_report_id'), table_name='situation_reports')
    op.drop_table('situation_reports')
    op.drop_index(op.f('ix_road_nodes_id'), table_name='road_nodes')
    op.drop_table('road_nodes')
    op.drop_index(op.f('ix_relief_centers_id'), table_name='relief_centers')
    op.drop_table('relief_centers')
    op.drop_index(op.f('ix_logistics_trucks_id'), table_name='logistics_trucks')
    op.drop_table('logistics_trucks')
    # ### end Alembic commands ###
